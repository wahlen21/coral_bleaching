# Results
```{r}
#install.packages('naniar')
#install.packages("viridis")
library(ggplot2)
library(tidyverse);
library("readxl")
library('naniar')
library(dplyr)
library(viridis)
library(forcats)
```

## Load dataset
```{r}
df <- read_excel("data/CoralBleaching.xlsx")
df <- df |> drop_na(REGION)
```


## Regional Distribution
```{r}
ggplot(data = df, aes(x = fct_infreq(REGION))) +
  geom_bar(fill = "lightblue", color = 'black') +
  labs(y = "Number of Observations", x = "Region", title = "Number of Observations by Region") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```
```{r, fig.width=6, fig.height=8}
country_counts <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") %>%
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations))

# Cleveland dot plot
ggplot(country_counts, aes(x = num_observations, y = reorder(COUNTRY, num_observations))) +
  geom_point(color = "lightblue", size = 1.5) +
  geom_segment(aes(xend = 0, yend = COUNTRY), color = "darkgray", size = 0.5) + 
  labs(
    title = "Number of Observations by Country",
    x = "Number of Observations",
    y = "Country"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    axis.text = element_text(size = 6)
  )

```


## Geospatial Trends


```{r}
# Heatmap: x=lat, y=long, color=bleaching_severity
top_5_countries <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") |>
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations)) %>%
  slice_head(n = 3)

# Filter data for the top 5 countries
top_5_countries_df <- df %>%
  filter(COUNTRY %in% top_5_countries$COUNTRY) 

ggplot(df, aes(x = LON, y = LAT, fill = BLEACHING_SEVERITY)) + 
  geom_density_2d() + 
  facet_wrap(~REGION, scales = "free") +  # Allow each facet to have its own scales
  labs(
    title = "Density of Bleaching Severity by Region",
    x = "Longitude",
    y = "Latitude",
    fill = "Bleaching Severity"
  ) +
  theme_minimal()

```
```{r, fig.width=10, fig.height=4}
# Get the top 5 countries based on number of observations
top_5_countries <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") %>%
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations)) %>%
  slice_head(n = 3)

# Filter data for the top 5 countries
top_5_countries_df <- df %>%
  filter(COUNTRY %in% top_5_countries$COUNTRY & BLEACHING_SEVERITY != "Severity Unknown")

# Hexbin plot
ggplot(top_5_countries_df, aes(x = LON, y = LAT, fill = factor(BLEACHING_SEVERITY, levels = c("No Bleaching", "Low", "Medium", "HIGH")))) + 
  geom_hex(alpha = 0.8, color = 'black', size = .3) + 
  facet_wrap(~COUNTRY, scales = "free") + 
  labs(
    title = "Hexbin Plot of Bleaching Severity by Country",
    x = "Longitude",
    y = "Latitude",
    fill = "Bleaching Severity"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c(
    "No Bleaching" = "coral1",
    "Low" = "coral2",
    "Medium" = "coral3",
    "HIGH" = "coral4"
  )) +
  theme(
    strip.text = element_text(size = 10), 
    axis.text = element_text(size = 8)
  )


```

```{r, fig.width=12, fig.height=8}
top_5_countries <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") %>% 
  filter(LON > 142) %>%
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations)) %>%
  slice_head(n = 1)

# Filter data for the top 5 countries
top_5_countries_df <- df %>%
  filter(COUNTRY %in% top_5_countries$COUNTRY & BLEACHING_SEVERITY != "Severity Unknown") %>%
  mutate(
    LAT = round(LAT, 1),  # Round LAT to the nearest tenth
    LON = round(LON, 1),  # Round LON to the nearest tenth
    BLEACHING_SEVERITY = factor(BLEACHING_SEVERITY, levels = c("No Bleaching", "Low", "Medium", "HIGH"))
  )

# Heatmap plot
ggplot() +
  # Add the world map (background)
  geom_map(data = world_map, map = world_map, aes(x = long, y = lat, map_id = region), 
           color = "black", fill = "lightgray", size = 0.2) +
  geom_tile(data = top_5_countries_df, aes(x = LON, y = LAT, fill = BLEACHING_SEVERITY)) + 
  facet_wrap(~COUNTRY, scales = "free") + 
  labs(
    title = "Heatmap Plot of Bleaching Severity",
    x = "Longitude",
    y = "Latitude",
    fill = "Bleaching Severity"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c(
  "No Bleaching" = "coral1",
  "Low" = "coral2",
  "Medium" = "coral3",
  "HIGH" = "coral4"
)) +
  theme(
    strip.text = element_text(size = 10), 
    axis.text = element_text(size = 8)
  ) +
  xlim(142, 153) +
  ylim(-25, -8)
```


```{r}
# Heatmap: x=lat, y=long, color=bleaching_severity, facet=Region




```

```{r}
# Hexbin: x=lat, y=long, color=bleaching_severity, facet=Region




```


## Temporal Trends
```{r}

```

