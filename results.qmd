# Results
```{r}
library(ggplot2)
library(tidyverse);
#install.packages('naniar')
library("readxl")
library('naniar')
library(dplyr)
#install.packages("viridis")
library(viridis)
```

## Load dataset
```{r}
df <- read_excel("data/CoralBleaching.xlsx")
df <- df |> drop_na(REGION)
```




## Regional Distribution
```{r}
ggplot(data=df, aes(REGION)) +
  geom_bar(fill="lightblue",color='black') +
  labs(y = "Number of Observations", x = "Region", title = "Number of Observations by Region") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}
# Bar plot: x=Country, y=number of observations
# group_country_df <- df |> group_by(COUNTRY) |> summarize(country_count=n(), YEAR=YEAR)
# 
# ggplot(data=group_country_df, aes(x=YEAR,y=country_count, color=COUNTRY)) +
#   geom_line() +
#   labs(y = "Number of Observations", x = "Country", title = "Number of Observations by Country") +
#   theme_minimal() +
#   theme(plot.title = element_text(hjust = 0.5))

group_country_df <- df |> 
  group_by(COUNTRY, YEAR) |> 
  summarize(country_count = n(), .groups = "drop")

ggplot(data = group_country_df, aes(x = YEAR, y = country_count, fill = COUNTRY)) +
  geom_path() +
  labs(
    y = "Number of Observations",
    x = "Year",
    title = "Number of Observations by Country"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5)) # Center title


```


## Geospatial Trends


```{r, fig.width=14, fig.height=10}
library(ggplot2)
library(dplyr)
#install.packages('maps')
library(maps)
library(viridis)

# Get the top 5 countries based on number of observations, excluding "Severity Unknown"
top_5_countries <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") %>%
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations)) %>%
  slice_head(n = 3)

# Filter data for the top 5 countries
top_5_countries_df <- df %>%
  filter(COUNTRY %in% top_5_countries$COUNTRY & BLEACHING_SEVERITY != "Severity Unknown")

# Get world map data
world_map <- map_data("world")

heatmap_map_plot <- ggplot() +
  geom_map(data = world_map, map = world_map, aes(x = long, y = lat, map_id = region),
           color = "black", fill = "lightgray", size = 0.2) +
  geom_point(data = top_5_countries_df, aes(x = LON, y = LAT, color = BLEACHING_SEVERITY, fill = BLEACHING_SEVERITY),
             shape = 21, size = 2, stroke = 0.5) +
  labs(
    title = "Bleaching Severity Heatmap by Country",
    x = "Longitude",
    y = "Latitude",
    fill = "Bleaching Severity",
    color = "Bleaching Severity"
  ) +
  theme_minimal() +
  theme(
    strip.text = element_text(size = 10),  # Adjust facet labels
    axis.text = element_text(size = 8)  # Adjust axis text size
  ) +
  facet_wrap(~COUNTRY, scales='free')  # Facet by country without zooming

# Display the plot
print(heatmap_map_plot)

```



```{r, fig.width=12, fig.height=6}
# Get the top 5 countries based on number of observations
top_5_countries <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") |>
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations)) %>%
  slice_head(n = 3)

# Filter data for the top 5 countries
top_5_countries_df <- df %>%
  filter(COUNTRY %in% top_5_countries$COUNTRY) 


severity_colors <- c(
  "No Bleaching" = "coral1",
  "Low" = "coral2",
  "Medium" = "coral3",
  "HIGH" = "coral4"
)


# Create the heatmap plot
heatmap_plot <- ggplot(top_5_countries_df, aes(x = LON, y = LAT, color = BLEACHING_SEVERITY)) + 
  geom_point(aes(fill = BLEACHING_SEVERITY), # Filling the points with the severity color
             shape = 21,                     # Use filled circles (can change shape as needed)
             size = 2,                       # Adjust the size of the points
             stroke = .5,                   # Adjust the stroke (edge) thickness
             color = "black",
             alpha = 0.8) +  # Create the heatmap
  facet_wrap(~COUNTRY, scales = "free") +  # Facet by country
  labs(
    title = "Bleaching Severity Heatmap by Country",
    x = "Longitude",
    y = "Latitude",
    fill = "Bleaching Severity"
  ) +
  theme_minimal() +  # Minimal theme for cleaner appearance
  theme(
    strip.text = element_text(size = 10),  # Adjust facet labels
    axis.text = element_text(size = 8)  # Adjust axis text size
  )+
  scale_fill_manual(values = severity_colors)

heatmap_plot



```

```{r}
# Heatmap: x=lat, y=long, color=bleaching_severity
top_5_countries <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") |>
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations)) %>%
  slice_head(n = 3)

# Filter data for the top 5 countries
top_5_countries_df <- df %>%
  filter(COUNTRY %in% top_5_countries$COUNTRY) 

ggplot(df, aes(x = LON, y = LAT, fill = BLEACHING_SEVERITY)) + 
  geom_density_2d() + 
  facet_wrap(~REGION, scales = "free") +  # Allow each facet to have its own scales
  labs(
    title = "Density of Bleaching Severity by Region",
    x = "Longitude",
    y = "Latitude",
    fill = "Bleaching Severity"
  ) +
  theme_minimal()

```
```{r, fig.width=10, fig.height=4}
# Get the top 5 countries based on number of observations
top_5_countries <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") %>%
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations)) %>%
  slice_head(n = 3)

# Filter data for the top 5 countries
top_5_countries_df <- df %>%
  filter(COUNTRY %in% top_5_countries$COUNTRY & BLEACHING_SEVERITY != "Severity Unknown")

# Hexbin plot
ggplot(top_5_countries_df, aes(x = LON, y = LAT, fill = BLEACHING_SEVERITY)) + 
  geom_hex(bins = 30, alpha = 0.8, color='black',size=.3) + 
  facet_wrap(~COUNTRY, scales = "free") + 
  labs(
    title = "Hexbin Plot of Bleaching Severity by Country",
    x = "Longitude",
    y = "Latitude",
    fill = "Bleaching Severity"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c(
  "No Bleaching" = "coral1",
  "Low" = "coral2",
  "Medium" = "coral3",
  "HIGH" = "coral4"
)) +
  theme(
    strip.text = element_text(size = 10), 
    axis.text = element_text(size = 8)
  )

```

```{r, fig.width=10, fig.height=8}
x_low <- 142

top_5_countries <- df %>%
  filter(BLEACHING_SEVERITY != "Severity Unknown") %>% 
  filter(LON > x_low) %>%
  group_by(COUNTRY) %>%
  summarize(num_observations = n()) %>%
  arrange(desc(num_observations)) %>%
  slice_head(n = 1)

# Filter data for the top 5 countries
top_5_countries_df <- df %>%
  filter(COUNTRY %in% top_5_countries$COUNTRY & BLEACHING_SEVERITY != "Severity Unknown") %>%
  mutate(
    LAT = round(LAT, 1),  # Round LAT to the nearest tenth
    LON = round(LON, 1),  # Round LON to the nearest tenth
    BLEACHING_SEVERITY = factor(BLEACHING_SEVERITY, levels = c("No Bleaching", "Low", "Medium", "HIGH"))
  )

# Heatmap plot
ggplot(top_5_countries_df, aes(x = LON, y = LAT, fill = BLEACHING_SEVERITY)) + 
  geom_tile(color='black') + 
  facet_wrap(~COUNTRY, scales = "free") + 
  labs(
    title = "Heatmap Plot of Bleaching Severity",
    x = "Longitude",
    y = "Latitude",
    fill = "Bleaching Severity"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c(
  "No Bleaching" = "coral1",
  "Low" = "coral2",
  "Medium" = "coral3",
  "HIGH" = "coral4"
)) +
  theme(
    strip.text = element_text(size = 10), 
    axis.text = element_text(size = 8)
  ) +
  xlim(x_low, NA)
```


```{r}
# Heatmap: x=lat, y=long, color=bleaching_severity, facet=Region




```

```{r}
# Hexbin: x=lat, y=long, color=bleaching_severity, facet=Region




```


## Temporal Trends
```{r}

```

